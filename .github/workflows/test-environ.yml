name: test-environ
on:
  push:
    branches:
      - test
jobs:
  create-exe-linux-and-upload-artifact:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - shell: bash
        name: Create linux exe and add exe to PATH
        run: |
          pip install -U pyinstaller
          cd app
          rm __init__.py
          pyinstaller acm.py
          tar -cvf acm_build.tar dist/acm
      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: acm-artifact
          path: /home/runner/work/AgileCloudManager/AgileCloudManager/app/acm_build.tar
          retention-days: 1

  e2e-tests-linux-arm:
    needs: [create-exe-linux-and-upload-artifact]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - id: ExpandUbuntuArtifact
        uses: ./.github/actions/ubuntu-artifact-expander
      - uses: actions/checkout@v3
      - id: ConfigureUbuntuAgent
        uses: ./.github/actions/ubuntu-provisioner
      - name: Put secrets in file
        shell: bash
        env:
          ACM_SECRET: ${{ secrets.ACM_REPO }}
          ACM_SECOND: ${{ secrets.ACM_REPO_SECOND }}
        run: | 
          echo "$ACM_SECRET" > /home/runner/acmconfig/keys.yaml
          echo "$ACM_SECOND" > /usr/acm/keys/adminAccounts/keys.yaml
          echo "About to print out contents of /home/runner/acmconfig/keys.yaml "
          cat /home/runner/acmconfig/keys.yaml
      - uses: actions/checkout@v3
      - id: AcmSetupOnUbuntu
        uses: ./.github/actions/acm-setup-on-ubuntu
        with:
          repo_url: https://github.com/AgileCloudInstitute/acm-config-projects-arm.git
#      - name: Setup On
#        shell: bash
#        run: |
#          PATH=$PATH:/home/runner/acmhome/dist/acm;export PATH
#          sudo mkdir /home/runner/testdir
#          sudo chown runner:runner /home/runner/testdir
#          cd /home/runner/testdir
#          echo 'About to setup on'
#          acm setup on sourceRepo=https://github.com/AgileCloudInstitute/acm-config-projects-arm.git
#          echo "........................About to ls -al "
#          ls -al 

#...............

#  create-linux-exe-and-push-to-linux-release-branch:
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v3
#        with:
#          token: ${{ secrets.HUSH }}
#      - shell: bash
#        name: Create exe and add exe to PATH
#        env:
#          GIT_PAT: ${{ secrets.HUSH }}  
#        run: |
#          echo "About to pwd"
#          pwd
#          echo "About to list directory contents of initial dir"
#          ls -al
#          pip install -U pyinstaller
#          cd app
#          rm __init__.py
#          pyinstaller acm.py
#          echo "About to list directory contents of app"
#          ls -al
#          mkdir /home/runner/release
#          cp -R dist/acm/. /home/runner/release/
#          cd /home/runner/release
#          echo "About to list directory contents of /home/runner/release"
#          ls -al 
#          echo "About to push to release-linux branch"
#          repoWithToken="https://"$GIT_PAT"@github.com/AgileCloudInstitute/AgileCloudManager.git"
#          git config --global user.email "Agile.Cloud.Institute@GreenRiverIT.com"
#          git config --global user.name "AgileCloudInstitute"
#          git init
#          git remote add origin $repoWithToken
#          git add --all
#          git commit -am 'pushed from test-environ'
#          git push --force -u origin HEAD:release-linux
#  create-windows-exe-and-push-to-windows-release-branch:
#    runs-on: windows-latest
#    steps:
#      - uses: actions/checkout@v3
#        with:
#          token: ${{ secrets.HUSH }}
#      - shell: pwsh
#        name: Create exe
#        run: |
#          $env:Path = "C:\\hostedtoolcache\\windows\\Python\\3.10.7\\x64\\Scripts\\;" + $env:Path
#          python -m pip install --upgrade pip requests
#          python -m pip install --upgrade pip PyYaml
#          python -m pip install --upgrade pip pyinstaller
#          pyinstaller --version
#          New-Item -ItemType Directory -Force -Path C:\\Users\\runneradmin\\acmwinrel\\
#          echo "About to start"
#          cd app
#          echo "About to dir"
#          dir
#          echo "About to gc .\acm.py"
#          gc .\acm.py
#          del __init__.py
#          echo "About to: pyinstaller acm.py"
#          pyinstaller acm.py
#          echo "About to dir"
#          dir
#          echo "About to dir D:\\a\\AgileCloudManager\\AgileCloudManager\\app\\dist\\acm\\"
#          cd D:\\a\\AgileCloudManager\\AgileCloudManager\\app\\dist\\acm\\
#          dir
#          Move-Item -Path "D:\\a\\AgileCloudManager\\AgileCloudManager\\app\\dist\\acm\\*" -Destination "C:\\Users\\runneradmin\\acmwinrel\\"
#          echo "About to dir C:\\Users\\runneradmin\\acmwinrel\\"
#          cd C:\\Users\\runneradmin\\acmwinrel\\
#          dir
#          Get-ChildItem D:\a\AgileCloudManager\AgileCloudManager -recurse | foreach ($_) {remove-item $_.fullname -recurse}
#          echo "About to dir D:\\a\\AgileCloudManager\\AgileCloudManager\\ "
#          cd D:\\a\\AgileCloudManager\\AgileCloudManager\\
#          dir
#          Move-Item -Path "C:\\Users\\runneradmin\\acmwinrel\\*" -Destination "D:\\a\\AgileCloudManager\\AgileCloudManager\\"
#      - shell: cmd
#        name: Push to release-windows branch
#        env:
#          GIT_PAT: ${{ secrets.HUSH }}
#        run: |
#          echo "About to dir C:\\Users\\runneradmin\\acmwinrel\\"
#          cd C:\\Users\\runneradmin\\acmwinrel\\
#          dir 
#          set repoWithToken="https://"$GIT_PAT"@github.com/AgileCloudInstitute/AgileCloudManager.git"
#          git config --global user.email "Agile.Cloud.Institute@GreenRiverIT.com"
#          git config --global user.name "AgileCloudInstitute"
#          git init
#          git remote add origin %repoWithToken%
#          git add --all
#          git commit -am "pushed from test-environ"
#          git push --force -u origin HEAD:release-windows
#  push-to-staging-branch:
#    needs: [create-linux-exe-and-push-to-linux-release-branch, create-windows-exe-and-push-to-windows-release-branch]
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v3
#        with:
#          token: ${{ secrets.HUSH }}
#      - shell: bash
#        name: Push changes to staging branch
#        run: |
#          git config --global user.email "Agile.Cloud.Institute@GreenRiverIT.com"
#          git config --global user.name "AgileCloudInstitute"
#          git init
#          git remote set-url origin "https://github.com/${GITHUB_REPOSITORY}.git"
#          git branch -M staging
#          git add --all
#          git push --force -u origin staging

########################################################################################
####  START OF TEMP HOLDING SECTION
########################################################################################
#  create-linux-exe-and-push-to-linux-release-branch:
#    needs: [e2e-tests-linux-terraform-packer, e2e-tests-linux-custom, e2e-tests-linux-cloudformation, e2e-tests-linux-arm]
#  create-windows-exe-and-push-to-windows-release-branch:
#    needs: [e2e-tests-windows-terraform-packer, e2e-tests-windows-custom, e2e-tests-windows-cloudformation, e2e-tests-windows-arm]
#  push-to-staging-branch:
#    needs: [create-linux-exe-and-push-to-linux-release-branch, create-windows-exe-and-push-to-windows-release-branch]
########################################################################################
####  END OF TEMP HOLDING SECTION
########################################################################################
