name: test-environ
on:
  push:
    branches:
      - test
jobs:
  create-exe-linux-and-upload-artifact:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - shell: bash
        name: Create linux exe and add exe to PATH
        run: |
          pip install -U pyinstaller
          cd app
          rm __init__.py
          pyinstaller acm.py
          tar -cvf acm_build.tar dist/acm
      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: acm-artifact
          path: /home/runner/work/AgileCloudManager/AgileCloudManager/app/acm_build.tar
          retention-days: 1
  e2e-tests-linux-arm:
    needs: [create-exe-linux-and-upload-artifact]
    runs-on: ubuntu-latest
    steps:
      - shell: bash
        name: Echo variables
        env:
          ACM_SECRET: ${{ secrets.ACM_SECRET }}
          ACM_SECOND: ${{ secrets.ACM_SECOND }}
        run: | 
          echo "ACM_SECRET is $ACM_SECRET"
          echo "ACM_SECOND is: $ACM_SECOND"
          #exit 1
      - uses: actions/download-artifact@v3
        with:
          name: acm-artifact
      - name: Display structure of downloaded files
        run: |
          mkdir /home/runner/acmhome
          sudo chown runner:runner /home/runner/acmhome
          mv acm_build.tar /home/runner/acmhome
          cd /home/runner/acmhome
          tar -xvf acm_build.tar
          rm acm_build.tar
          PATH=$PATH:/home/runner/acmhome/dist/acm;export PATH
      - uses: actions/checkout@v3
      - id: ConfigureUbuntuAgent
        uses: ./.github/actions/ubuntu-provisioner
      - name: Put secrets in file
        shell: bash
        env:
          ACM_SECRET: ${{ secrets.ACM_REPO }}
          ACM_SECOND: ${{ secrets.ACM_REPO_SECOND }}
        run: | 
          echo "$ACM_SECRET" > /home/runner/acmconfig/keys.yaml
          echo "$ACM_SECOND" > /usr/acm/keys/adminAccounts/keys.yaml
          echo "About to print out contents of /home/runner/acmconfig/keys.yaml "
          cat /home/runner/acmconfig/keys.yaml
      - name: Setup On
        shell: bash
        run: |
          PATH=$PATH:/home/runner/acmhome/dist/acm;export PATH
          sudo mkdir /home/runner/testdir
          sudo chown runner:runner /home/runner/testdir
          cd /home/runner/testdir
          echo 'About to setup on'
          acm setup on sourceRepo=https://github.com/AgileCloudInstitute/acm-config-projects-arm.git
          echo "........................About to ls -al "
          ls -al 
      - shell: bash
        name: Run platform on
        run: |
          PATH=$PATH:/home/runner/acmhome/dist/acm;export PATH
          cd /home/runner/testdir
          echo ".................about to run e2e test"
          acm platform on
      - shell: bash
        name: Run platform off
        run: |
          PATH=$PATH:/home/runner/acmhome/dist/acm;export PATH
          cd /home/runner/testdir
          echo ".................about to run e2e test"
          acm platform off
      - name: Setup Off
        run: |
          PATH=$PATH:/home/runner/acmhome/dist/acm;export PATH
          cd /home/runner/testdir
          echo '........................About to setup off'
          acm setup off
          echo "........................About to ls -al"
          ls -al
      - shell: bash
        name: Delete Secrets
        run: |
          rm /home/runner/acmconfig/keys.yaml
  e2e-tests-linux-cloudformation:
    needs: [create-exe-linux-and-upload-artifact]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: acm-artifact
      - name: Display structure of downloaded files
        run: |
          mkdir /home/runner/acmhome
          sudo chown runner:runner /home/runner/acmhome
          mv acm_build.tar /home/runner/acmhome
          cd /home/runner/acmhome
          tar -xvf acm_build.tar
          rm acm_build.tar
          PATH=$PATH:/home/runner/acmhome/dist/acm;export PATH
      - uses: actions/checkout@v3
      - id: ConfigureUbuntuAgent
        uses: ./.github/actions/ubuntu-provisioner
      - name: Put secrets in file
        shell: bash
        env:
          ACM_SECRET: ${{ secrets.ACM_REPO }}
          ACM_SECOND: ${{ secrets.ACM_REPO_SECOND }}
        run: | 
          echo "$ACM_SECRET" > /home/runner/acmconfig/keys.yaml
          echo "$ACM_SECOND" > /usr/acm/keys/adminAccounts/keys.yaml
      - name: Setup On
        shell: bash
        run: |
          PATH=$PATH:/home/runner/acmhome/dist/acm;export PATH
          sudo mkdir /home/runner/testdir
          sudo chown runner:runner /home/runner/testdir
          cd /home/runner/testdir
          echo 'About to setup on'
          acm setup on sourceRepo=https://github.com/AgileCloudInstitute/acm-config-projects-cf.git
          echo "........................About to ls -al "
          ls -al 
      - shell: bash
        name: Run platform on
        run: |
          PATH=$PATH:/home/runner/acmhome/dist/acm;export PATH
          cd /home/runner/testdir
          echo ".................about to run e2e test"
          acm platform on
      - shell: bash
        name: Run platform off
        run: |
          PATH=$PATH:/home/runner/acmhome/dist/acm;export PATH
          cd /home/runner/testdir
          echo ".................about to run e2e test"
          acm platform off
      - name: Setup Off
        shell: bash
        run: |
          PATH=$PATH:/home/runner/acmhome/dist/acm;export PATH
          cd /home/runner/testdir
          echo '........................About to setup off'
          acm setup off
          echo "........................About to ls -al"
          ls -al
      - shell: bash
        name: Delete Secrets
        run: |
          rm /home/runner/acmconfig/keys.yaml
  e2e-tests-linux-custom:
    needs: [create-exe-linux-and-upload-artifact]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: acm-artifact
      - name: Display structure of downloaded files
        run: |
          mkdir /home/runner/acmhome
          sudo chown runner:runner /home/runner/acmhome
          mv acm_build.tar /home/runner/acmhome
          cd /home/runner/acmhome
          tar -xvf acm_build.tar
          rm acm_build.tar
          PATH=$PATH:/home/runner/acmhome/dist/acm;export PATH
      - uses: actions/checkout@v3
      - id: ConfigureUbuntuAgent
        uses: ./.github/actions/ubuntu-provisioner
      - name: Put secrets in file
        shell: bash
        env:
          ACM_SECRET: ${{ secrets.ACM_REPO }}
          ACM_SECOND: ${{ secrets.ACM_REPO_SECOND }}
        run: | 
          echo "$ACM_SECRET" > /home/runner/acmconfig/keys.yaml
          echo "$ACM_SECOND" > /usr/acm/keys/adminAccounts/keys.yaml
      - name: Setup On
        shell: bash
        run: |
          PATH=$PATH:/home/runner/acmhome/dist/acm;export PATH
          sudo mkdir /home/runner/testdir
          sudo chown runner:runner /home/runner/testdir
          cd /home/runner/testdir
          echo 'About to setup on'
          acm setup on sourceRepo=https://github.com/AgileCloudInstitute/acm-config-custom.git
          echo "........................About to ls -al "
          ls -al 
      - shell: bash
        name: Run platform on
        run: |
          PATH=$PATH:/home/runner/acmhome/dist/acm;export PATH
          cd /home/runner/testdir
          echo ".................about to run e2e test"
          acm platform on
      - shell: bash
        name: Run platform off
        run: |
          PATH=$PATH:/home/runner/acmhome/dist/acm;export PATH
          cd /home/runner/testdir
          echo ".................about to run e2e test"
          acm platform off
      - name: Setup Off
        run: |
          PATH=$PATH:/home/runner/acmhome/dist/acm;export PATH
          cd /home/runner/testdir
          echo '........................About to setup off'
          acm setup off
          echo "........................About to ls -al"
          ls -al
      - shell: bash
        name: Delete Secrets
        run: |
          rm /home/runner/acmconfig/keys.yaml
  e2e-tests-linux-terraform-packer:
    needs: [create-exe-linux-and-upload-artifact]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: acm-artifact
      - name: Display structure of downloaded files
        run: |
          mkdir /home/runner/acmhome
          sudo chown runner:runner /home/runner/acmhome
          mv acm_build.tar /home/runner/acmhome
          cd /home/runner/acmhome
          tar -xvf acm_build.tar
          rm acm_build.tar
          PATH=$PATH:/home/runner/acmhome/dist/acm;export PATH
      - uses: actions/checkout@v3
      - id: ConfigureUbuntuAgent
        uses: ./.github/actions/ubuntu-provisioner
      - name: Put secrets in file
        shell: bash
        env:
          ACM_SECRET: ${{ secrets.ACM_REPO }}
          ACM_SECOND: ${{ secrets.ACM_REPO_SECOND }}
        run: | 
          echo "$ACM_SECRET" > /home/runner/acmconfig/keys.yaml
          echo "$ACM_SECOND" > /usr/acm/keys/adminAccounts/keys.yaml
      - name: Setup On
        shell: bash
        run: |
          PATH=$PATH:/home/runner/acmhome/dist/acm;export PATH
          sudo mkdir /home/runner/testdir
          sudo chown runner:runner /home/runner/testdir
          cd /home/runner/testdir
          echo 'About to setup on'
          acm setup on sourceRepo=https://github.com/AgileCloudInstitute/acm-config-terraform-packer.git
          echo "........................About to ls -al "
          ls -al 
      - shell: bash
        name: Run tfbackend serviceType on
        run: |
          PATH=$PATH:/home/runner/acmhome/dist/acm;export PATH
          cd /home/runner/testdir
          acm serviceType on systemName=tfbackend serviceType=tfBackend
      - shell: bash
        name: Run tfbackend serviceType off
        run: |
          PATH=$PATH:/home/runner/acmhome/dist/acm;export PATH
          cd /home/runner/testdir
          acm serviceType off systemName=tfbackend serviceType=tfBackend
      - shell: bash
        name: Run tfbackend serviceInstance on
        run: |
          PATH=$PATH:/home/runner/acmhome/dist/acm;export PATH
          cd /home/runner/testdir
          acm serviceInstance on systemName=tfbackend serviceType=tfBackend serviceInstance=adminAccounts
      - shell: bash
        name: Run tfbackend serviceInstance off
        run: |
          PATH=$PATH:/home/runner/acmhome/dist/acm;export PATH
          cd /home/runner/testdir
          acm serviceInstance off systemName=tfbackend serviceType=tfBackend serviceInstance=adminAccounts
      - shell: bash
        name: Run tfbackend services on
        run: |
          PATH=$PATH:/home/runner/acmhome/dist/acm;export PATH
          cd /home/runner/testdir
          acm services on systemName=tfbackend
      - shell: bash
        name: Run admin foundation on
        run: |
          PATH=$PATH:/home/runner/acmhome/dist/acm;export PATH
          cd /home/runner/testdir
          acm foundation on systemName=admin
      - shell: bash
        name: Run admin services on
        run: |
          PATH=$PATH:/home/runner/acmhome/dist/acm;export PATH
          cd /home/runner/testdir
          acm services on systemName=admin
      - shell: bash
        name: Run agents foundation on
        run: |
          PATH=$PATH:/home/runner/acmhome/dist/acm;export PATH
          cd /home/runner/testdir
          acm foundation on systemName=agents
      - shell: bash
        name: Run agents services on
        run: |
          PATH=$PATH:/home/runner/acmhome/dist/acm;export PATH
          cd /home/runner/testdir
          acm services on systemName=agents
      - shell: bash
        name: Run agents services off
        run: |
          PATH=$PATH:/home/runner/acmhome/dist/acm;export PATH
          cd /home/runner/testdir
          acm services off systemName=agents
      - shell: bash
        name: Run agents foundation off
        run: |
          PATH=$PATH:/home/runner/acmhome/dist/acm;export PATH
          cd /home/runner/testdir
          acm foundation off systemName=agents
      - shell: bash
        name: Run admin services off
        run: |
          PATH=$PATH:/home/runner/acmhome/dist/acm;export PATH
          cd /home/runner/testdir
          acm services off systemName=admin
      - shell: bash
        name: Run admin foundation off
        run: |
          PATH=$PATH:/home/runner/acmhome/dist/acm;export PATH
          cd /home/runner/testdir
          acm foundation off systemName=admin
      - shell: bash
        name: Run tfbackend services off
        run: |
          PATH=$PATH:/home/runner/acmhome/dist/acm;export PATH
          cd /home/runner/testdir
          acm services off systemName=tfbackend
      - name: Setup Off
        run: |
          PATH=$PATH:/home/runner/acmhome/dist/acm;export PATH
          cd /home/runner/testdir
          echo '........................About to setup off'
          acm setup off
          echo "........................About to ls -al"
          ls -al
      - shell: bash
        name: Delete Secrets
        run: |
          rm /home/runner/acmconfig/keys.yaml
  e2e-tests-windows-arm:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      - id: ConfigureWindowsAgent 
        uses: ./.github/actions/windows-provisioner
      - id: CompileAppForWindows
        uses: ./.github/actions/app-compiler-windows
      - shell: python
        name: Save secrets to file
        env:
          ACM_SECRET: ${{ secrets.ACM_REPO }}
          ACM_SECOND: ${{ secrets.ACM_REPO_SECOND }}
        run: |
          import base64, subprocess, sys, os, pathlib
          #Import first secrets file
          with open('C:\\Users\\runneradmin\\acmconfig\\keys.yaml', 'w') as key_file:
            key_file.write(os.environ['ACM_SECRET'])
          #Import second secrets file
          with open('C:\\Users\\runneradmin\\acm\\keys\\adminAccounts\\keys.yaml', 'w') as key_file:
            key_file.write(os.environ['ACM_SECOND'])
      - name: Run setup on
        run: |
          $env:Path += ";C:\\Users\\runneradmin\\acmhome\\"
          cd C:\\stgng\\
          echo 'About to: acm setup on'
          acm setup on sourceRepo=https://github.com/AgileCloudInstitute/acm-config-projects-arm.git
          echo "About to dir"
          dir
      - name: Run platform on
        run: |
          $env:Path += ";C:\\Users\\runneradmin\\acmhome\\"
          cd C:\\stgng\\
          echo ".................about to run e2e test"
          acm platform on
      - name: Run platform off
        run: |
          $env:Path += ";C:\\Users\\runneradmin\\acmhome\\"
          cd C:\\stgng\\
          echo ".................about to run e2e test"
          acm platform off
      - name: Setup Off
        run: |
          $env:Path += ";C:\\Users\\runneradmin\\acmhome\\"
          cd C:\\stgng\\
          echo ".................about to run setup off"
          acm setup off
          echo "About to dir"
          dir
      - name: Delete Secrets
        run: |
          del "C:\\Users\\runneradmin\\acmconfig\\keys.yaml"
          del 'C:\\Users\\runneradmin\\acm\\keys\\adminAccounts\\keys.yaml'
  e2e-tests-windows-cloudformation:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      - id: ConfigureWindowsAgent
        uses: ./.github/actions/windows-provisioner
      - id: CompileAppForWindows
        uses: ./.github/actions/app-compiler-windows
      - shell: python
        name: Save secrets to file
        env:
          ACM_SECRET: ${{ secrets.ACM_REPO }}
          ACM_SECOND: ${{ secrets.ACM_REPO_SECOND }}
        run: |
          import base64, subprocess, sys, os, pathlib
          #Import first secrets file
          with open('C:\\Users\\runneradmin\\acmconfig\\keys.yaml', 'w') as key_file:
            key_file.write(os.environ['ACM_SECRET'])
          #Import second secrets file
          with open('C:\\Users\\runneradmin\\acm\\keys\\adminAccounts\\keys.yaml', 'w') as key_file:
            key_file.write(os.environ['ACM_SECOND'])
      - name: Run setup on
        run: |
          $env:Path += ";C:\\Users\\runneradmin\\acmhome\\"
          cd C:\\stgng\\
          echo 'About to: acm setup on'
          acm setup on sourceRepo=https://github.com/AgileCloudInstitute/acm-config-projects-cf.git
          echo "About to dir"
          dir
      - name: Run platform on
        run: |
          $env:Path += ";C:\\Users\\runneradmin\\acmhome\\"
          cd 'C:\\stgng\\'
          echo ".................about to run e2e test"
          acm platform on
      - name: Run platform off
        run: |
          $env:Path += ";C:\\Users\\runneradmin\\acmhome\\"
          cd C:\\stgng\\
          echo ".................about to run e2e test"
          acm platform off
      - name: Setup Off
        run: |
          $env:Path += ";C:\\Users\\runneradmin\\acmhome\\"
          cd C:\\stgng\\
          echo ".................about to run setup off"
          acm setup off
          echo "About to dir"
          dir
      - name: Delete Secrets
        run: |
          del C:\\Users\\runneradmin\\acmconfig\\keys.yaml
          del C:\\Users\\runneradmin\\acm\\keys\\adminAccounts\\keys.yaml
  e2e-tests-windows-custom:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      - id: ConfigureWindowsAgent
        uses: ./.github/actions/windows-provisioner
      - id: CompileAppForWindows
        uses: ./.github/actions/app-compiler-windows
      - shell: python
        name: Save secrets to file
        env:
          ACM_SECRET: ${{ secrets.ACM_REPO }}
          ACM_SECOND: ${{ secrets.ACM_REPO_SECOND }}
        run: |
          import base64, subprocess, sys, os, pathlib
          #Import first secrets file
          with open('C:\\Users\\runneradmin\\acmconfig\\keys.yaml', 'w') as key_file:
            key_file.write(os.environ['ACM_SECRET'])
          #Import second secrets file
          with open('C:\\Users\\runneradmin\\acm\\keys\\adminAccounts\\keys.yaml', 'w') as key_file:
            key_file.write(os.environ['ACM_SECOND'])
      - name: Run setup on
        run: |
          $env:Path += ";C:\\Users\\runneradmin\\acmhome\\"
          cd C:\\stgng\\
          echo 'About to: acm setup on'
          acm setup on sourceRepo=https://github.com/AgileCloudInstitute/acm-config-custom.git
          echo "About to dir"
          dir
      - name: Run platform on
        run: |
          $env:Path += ";C:\\Users\\runneradmin\\acmhome\\"
          cd C:\\stgng\\
          echo ".................about to run e2e test"
          acm platform on
      - name: Run platform off
        run: |
          $env:Path += ";C:\\Users\\runneradmin\\acmhome\\"
          cd C:\\stgng\\
          echo ".................about to run e2e test"
          acm platform off
      - name: Setup Off
        run: |
          $env:Path += ";C:\\Users\\runneradmin\\acmhome\\"
          cd C:\\stgng\\
          echo ".................about to run setup off"
          acm setup off
          echo "About to dir"
          dir
      - name: Delete Secrets
        run: |
          del C:\\Users\\runneradmin\\acmconfig\\keys.yaml
          del C:\\Users\\runneradmin\\acm\\keys\\adminAccounts\\keys.yaml
  e2e-tests-windows-terraform-packer:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      - id: ConfigureWindowsAgent
        uses: ./.github/actions/windows-provisioner
      - id: CompileAppForWindows
        uses: ./.github/actions/app-compiler-windows
      - shell: python
        name: Save secrets to file
        env:
          ACM_SECRET: ${{ secrets.ACM_REPO }}
          ACM_SECOND: ${{ secrets.ACM_REPO_SECOND }}
        run: |
          import base64, subprocess, sys, os, pathlib
          #Import first secrets file
          with open('C:\\Users\\runneradmin\\acmconfig\\keys.yaml', 'w') as key_file:
            key_file.write(os.environ['ACM_SECRET'])
          #Import second secrets file
          with open('C:\\Users\\runneradmin\\acm\\keys\\adminAccounts\\keys.yaml', 'w') as key_file:
            key_file.write(os.environ['ACM_SECOND'])
      - name: Run setup on
        run: |
          $env:Path += ";C:\\Users\\runneradmin\\acmhome\\"
          cd C:\\stgng\\
          echo 'About to: acm setup on'
          acm setup on sourceRepo=https://github.com/AgileCloudInstitute/acm-config-terraform-packer.git
          echo "About to dir"
          dir
      - name: Run tfbackend serviceType on
        run: |
          $env:Path += ";C:\\Users\\runneradmin\\acmhome\\"
          cd C:\\stgng\\
          echo ".................about to run e2e test"
          acm serviceType on systemName=tfbackend serviceType=tfBackend
      - name: Run tfbackend serviceType off
        run: |
          $env:Path += ";C:\\Users\\runneradmin\\acmhome\\"
          cd C:\\stgng\\
          echo ".................about to run e2e test"
          acm serviceType off systemName=tfbackend serviceType=tfBackend
      - name: Run tfbackend serviceInstance on
        run: |
          $env:Path += ";C:\\Users\\runneradmin\\acmhome\\"
          cd C:\\stgng\\
          echo ".................about to run e2e test"
          acm serviceInstance on systemName=tfbackend serviceType=tfBackend serviceInstance=adminAccounts
      - name: Run tfbackend serviceInstance off
        run: |
          $env:Path += ";C:\\Users\\runneradmin\\acmhome\\"
          cd C:\\stgng\\
          echo ".................about to run e2e test"
          acm serviceInstance off systemName=tfbackend serviceType=tfBackend serviceInstance=adminAccounts
      - name: Run tfbackend services on
        run: |
          $env:Path += ";C:\\Users\\runneradmin\\acmhome\\"
          cd C:\\stgng\\
          echo ".................about to run e2e test"
          acm services on systemName=tfbackend
      - name: Run admin foundation on
        run: |
          $env:Path += ";C:\\Users\\runneradmin\\acmhome\\"
          cd C:\\stgng\\
          echo ".................about to run e2e test"
          acm foundation on systemName=admin
      - name: Run admin services on
        run: |
          $env:Path += ";C:\\Users\\runneradmin\\acmhome\\"
          cd C:\\stgng\\
          echo ".................about to run e2e test"
          acm services on systemName=admin
      - name: Run agents foundation on
        run: |
          $env:Path += ";C:\\Users\\runneradmin\\acmhome\\"
          cd C:\\stgng\\
          echo ".................about to run e2e test"
          acm foundation on systemName=agents
      - name: Run agents services on
        run: |
          $env:Path += ";C:\\Users\\runneradmin\\acmhome\\"
          cd C:\\stgng\\
          echo ".................about to run e2e test"
          acm services on systemName=agents
      - name: Run agents services off
        run: |
          $env:Path += ";C:\\Users\\runneradmin\\acmhome\\"
          cd C:\\stgng\\
          echo ".................about to run e2e test"
          acm services off systemName=agents
      - name: Run agents foundation off
        run: |
          $env:Path += ";C:\\Users\\runneradmin\\acmhome\\"
          cd C:\\stgng\\
          echo ".................about to run e2e test"
          acm foundation off systemName=agents
      - name: Run admin services off
        run: |
          $env:Path += ";C:\\Users\\runneradmin\\acmhome\\"
          cd C:\\stgng\\
          echo ".................about to run e2e test"
          acm services off systemName=admin
      - name: Run admin foundation off
        run: |
          $env:Path += ";C:\\Users\\runneradmin\\acmhome\\"
          cd C:\\stgng\\
          echo ".................about to run e2e test"
          acm foundation off systemName=admin
      - name: Run tfbackend services off
        run: |
          $env:Path += ";C:\\Users\\runneradmin\\acmhome\\"
          cd C:\\stgng\\
          echo ".................about to run e2e test"
          acm services off systemName=tfbackend
      - name: Setup Off
        run: |
          $env:Path += ";C:\\Users\\runneradmin\\acmhome\\"
          cd C:\\stgng\\
          echo ".................about to run setup off"
          acm setup off
          echo "About to dir"
          dir
      - name: Delete Secrets
        run: |
          del C:\\Users\\runneradmin\\acmconfig\\keys.yaml
          del C:\\Users\\runneradmin\\acm\\keys\\adminAccounts\\keys.yaml
  create-linux-exe-and-push-to-linux-release-branch:
    needs: [e2e-tests-linux-terraform-packer, e2e-tests-linux-custom, e2e-tests-linux-cloudformation, e2e-tests-linux-arm]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.HUSH }}
      - shell: bash
        name: Create exe and add exe to PATH
        env:
          GIT_PAT: ${{ secrets.HUSH }}
        run: |
          echo "About to pwd"
          pwd
          echo "About to list directory contents of initial dir"
          ls -al
          pip install -U pyinstaller
          cd app
          rm __init__.py
          pyinstaller acm.py
          echo "About to list directory contents of app"
          ls -al
          mkdir /home/runner/release
          cp -R dist/acm/. /home/runner/release/
          cd /home/runner/release
          echo "About to list directory contents of /home/runner/release"
          ls -al
          repoWithToken="https://"$GIT_PAT"@github.com/AgileCloudInstitute/AgileCloudManager.git"
          git config --global user.email "Agile.Cloud.Institute@GreenRiverIT.com"
          git config --global user.name "AgileCloudInstitute"
          git init
          git remote add origin $repoWithToken
          git add --all
          git commit -am 'pushed from test-environ'
          git push --force -u origin HEAD:release-linux
  create-windows-exe-and-push-to-windows-release-branch:
    needs: [e2e-tests-windows-terraform-packer, e2e-tests-windows-custom, e2e-tests-windows-cloudformation, e2e-tests-windows-arm]
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.HUSH }}
      - shell: pwsh
        name: Create exe and add exe to PATH
        env:
          GIT_PAT: ${{ secrets.HUSH }}
        run: |
          python -m pip install --upgrade pip PyYaml
          python -m pip install --upgrade pip pyinstaller
          New-Item -ItemType Directory -Force -Path C:\\Users\\runneradmin\\acmwinrel\\
          echo "About to start"
          cd app
          del __init__.py
          echo "About to: pyinstaller acm.py"
          pyinstaller acm.py
          Move-Item -Path "dist\\acm\\*" -Destination "C:\\Users\\runneradmin\\acmwinrel\\"
          echo "About to dir C:\\Users\\runneradmin\\acmwinrel\\"
          cd C:\\Users\\runneradmin\\acmwinrel\\
          dir 
          repoWithToken="https://"$GIT_PAT"@github.com/AgileCloudInstitute/AgileCloudManager.git"
          git config --global user.email "Agile.Cloud.Institute@GreenRiverIT.com"
          git config --global user.name "AgileCloudInstitute"
          git init
          git remote add origin $repoWithToken
          git add --all
          git commit -am 'pushed from test-environ'
          git push --force -u origin HEAD:release-windows
  push-to-staging-branch:
    needs: [create-linux-exe-and-push-to-linux-release-branch, create-windows-exe-and-push-to-windows-release-branch]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.HUSH }}
      - shell: bash
        name: Push changes to staging branch
        run: |
          git config --global user.email "Agile.Cloud.Institute@GreenRiverIT.com"
          git config --global user.name "AgileCloudInstitute"
          git init
          git remote set-url origin "https://github.com/${GITHUB_REPOSITORY}.git"
          git branch -M staging
          git add --all
          git push --force -u origin staging
#######################################################################################
########################################################################################
#######################################################################################
#######################################################################################
#  push-to-staging-branch:
#    needs: [e2e-tests-linux-terraform-packer, e2e-tests-linux-custom, e2e-tests-linux-cloudformation, e2e-tests-linux-arm]
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v3
#      - shell: bash
#        name: Push changes to staging branch
#        env:
#          GIT_PAT: ${{ secrets.HUSH }}
#        run: |
#          repoWithToken="https://"$GIT_PAT"@github.com/AgileCloudInstitute/AgileCloudManager.git"
#          git config --global user.email "Agile.Cloud.Institute@GreenRiverIT.com"
#          git config --global user.name "AgileCloudInstitute"
#          git init
#          git remote set-url origin $repoWithToken
#          git branch -M staging
#          git add --all
#          git push --force -u origin staging
