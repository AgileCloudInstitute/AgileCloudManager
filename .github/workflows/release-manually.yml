name: release-manually
on:
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'warning'
        type: choice
        options:
        - info
        - warning
        - debug
      tags:
        description: 'Test scenario tags'
        required: false
        type: boolean
jobs:
  log-the-inputs:
    runs-on: ubuntu-latest
    steps:
      - shell: bash
        name: Print inputs to log
        run: |
          #This entire job is a filler example from: https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#workflow_dispatch
          echo "Log level: $LEVEL"
          echo "Tags: $TAGS"
        env:
          LEVEL: ${{ inputs.logLevel }}
          TAGS: ${{ inputs.tags }}
  release-a-version:
    needs: [log-the-inputs]
    runs-on: ubuntu-latest
    steps:
      - shell: bash
        name: Release
        env:
          ACM_SECRET: ${{ secrets.ACM_REPO }}
          ACM_SECOND: ${{ secrets.ACM_REPO_SECOND }}
          VERSION: ${{ inputs.version }}
          DESCRIPTION: ${{ inputs.description }}
          GIT_PAT: ${{ secrets.HUSH }}
        run: |
          repoWithToken="https://"$GIT_PAT"@github.com/AgileCloudInstitute/AgileCloudManager.git"
          git init
          git remote add -t release-linux -f origin $repoWithToken
          git checkout release-linux
          rm -rf
          echo "About to list contents of directory"
          ls -al
          releaseFile="empty"
          #files=(/home/runner/work/AgileCloudManager/AgileCloudManager/*)
          #files=(find . -type f)
          readarray -t FILES < <(find .)
          echo "About to print contents of files array"
          echo "${FILES[@]}"
          echo "About to print file names"
          for i in ${FILES[@]}; do 
            echo "a"
            echo $i; 
            if [[ "$i" == "./acm_linux_"* ]]; then
              echo "jonesy"
            fi
            if [[ "$i" == *".tar" ]]; then
              echo "cola"
            fi
            if [[ "$i" == "./acm_linux_"* ]] && [[ "$i" == *".tar" ]]; then
              echo "b"
              echo "$i"
              releaseFile="$i"
            fi
          done
          #nfiles=${#FILES[@]}
          #echo "-- dollarnfiles"
          #echo $nfiles
          #echo "-- justnfiles"
          #echo nfiles
          #for f in $nfiles; do
          #echo "files0 is "
          #echo ${FILES[0]}
          #echo "files1 is "
          #echo ${FILES[1]}
          #for ((i = 0; i < $nfiles; i += 1)); do
          #  # Do something with ${FILES[$i]}
          #  echo "a"
          #  echo "${FILES[$i]"
          #  if [[ "$f" == "acm_linux_"* ]] && [[ "$f" == *".tar" ]]; then
          #    echo "b"
          #    echo "$f"
          #    releaseFile="$f"
          #  fi
          #done
          echo "About to print name of file"
          echo releaseFile
          prefix="acm_linux_"
          suffix=".tar"
          vers=${releaseFile#"$prefix"}
          vers=${vers%"$suffix"}
          echo "About to print version 1"
          echo "${vers}"
          echo "About to print version 2"
          echo $vers
          echo "About to create release"
          # This draft uses documentation from: https://docs.github.com/en/rest/releases/releases#create-a-release
          # Might need to remove single-quotes '' around VERSION and DESCRIPTION below.
          # GitHub CLI api
          # https://cli.github.com/manual/gh_api
          #gh api \
          #  --method POST \
          #  -H "Accept: application/vnd.github+json" \
          #  /repos/AgileCloudInstitute/AgileCloudManager/releases \
          #  -f tag_name='$VERSION' \
          #  -f target_commitish='master' \
          #  -f name='$VERSION' \
          #  -f body='$DESCRIPTION' \
          #  -F draft=false \
          #  -F prerelease=false \
          #  -F generate_release_notes=false 
