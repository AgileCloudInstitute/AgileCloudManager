name: e2e Tests for Ubuntu
on:
  workflow_call:
    secrets:
      ACM_SECRET:
        required: true
      ACM_SECOND:
        required: true
jobs:
  e2e-tests-linux-arm:
    runs-on: ubuntu-latest
    steps:
      - shell: bash
        name: Echo variables
        env:
          ACM_SECRET: ${{ secrets.ACM_SECRET }}
          ACM_SECOND: ${{ secrets.ACM_SECOND }}
        run: | 
          echo "ACM_SECRET is $ACM_SECRET"
          echo "ACM_SECOND is: $ACM_SECOND"
          #exit 1
      - uses: actions/download-artifact@v3
        with:
          name: acm-artifact
      - name: Display structure of downloaded files
        run: |

          mkdir /home/runner/acmhome
          sudo chown runner:runner /home/runner/acmhome
          mv acm_build.tar /home/runner/acmhome
          cd /home/runner/acmhome
          tar -xvf acm_build.tar
          rm acm_build.tar
          PATH=$PATH:/home/runner/acmhome/dist/acm;export PATH
      - uses: actions/checkout@v3
      - id: ConfigureUbuntuAgent
        uses: ./.github/actions/ubuntu-provisioner
      - name: Setup On
        shell: bash
        env:
          ACM_SECRET: ${{ secrets.ACM_REPO }}
          ACM_SECOND: ${{ secrets.ACM_REPO_SECOND }}
        run: |
          echo "$ACM_SECRET" > /home/runner/acmconfig/keys.yaml
          echo "$ACM_SECOND" > /usr/acm/keys/adminAccounts/keys.yaml
          echo "About to print ACM_SECRET"
          echo "$ACM_SECRET"
          PATH=$PATH:/home/runner/acmhome/dist/acm;export PATH
          sudo mkdir /home/runner/testdir
          sudo chown runner:runner /home/runner/testdir
          cd /home/runner/testdir
          echo 'About to setup on'
          acm setup on sourceRepo=https://github.com/AgileCloudInstitute/acm-config-projects-arm.git
          echo "........................About to ls -al "
          ls -al 
      - shell: bash
        name: Run platform on
        env:
          ACM_SECRET: ${{ secrets.ACM_REPO }}
          ACM_SECOND: ${{ secrets.ACM_REPO_SECOND }}
        run: |
          echo "$ACM_SECRET" > /home/runner/acmconfig/keys.yaml
          echo "$ACM_SECOND" > /usr/acm/keys/adminAccounts/keys.yaml
          echo "About to print ACM_SECRET"
          echo "$ACM_SECRET"
          PATH=$PATH:/home/runner/acmhome/dist/acm;export PATH
          cd /home/runner/testdir
          echo ".................about to run e2e test"
          acm platform on
      - shell: bash
        name: Run platform off
        env:
          ACM_SECRET: ${{ secrets.ACM_REPO }}
          ACM_SECOND: ${{ secrets.ACM_REPO_SECOND }}
        run: |
          echo "$ACM_SECRET" > /home/runner/acmconfig/keys.yaml
          echo "$ACM_SECOND" > /usr/acm/keys/adminAccounts/keys.yaml
          echo "About to print ACM_SECRET"
          echo "$ACM_SECRET"
          PATH=$PATH:/home/runner/acmhome/dist/acm;export PATH
          cd /home/runner/testdir
          echo ".................about to run e2e test"
          acm platform off
      - name: Setup Off
        env:
          ACM_SECRET: ${{ secrets.ACM_REPO }}
          ACM_SECOND: ${{ secrets.ACM_REPO_SECOND }}
        run: |
          echo "$ACM_SECRET" > /home/runner/acmconfig/keys.yaml
          echo "$ACM_SECOND" > /usr/acm/keys/adminAccounts/keys.yaml
          echo "About to print ACM_SECRET"
          echo "$ACM_SECRET"
          PATH=$PATH:/home/runner/acmhome/dist/acm;export PATH
          cd /home/runner/testdir
          echo '........................About to setup off'
          acm setup off
          echo "........................About to ls -al"
          ls -al
      - shell: bash
        name: Delete Secrets
        run: |
          rm /home/runner/acmconfig/keys.yaml
  e2e-tests-linux-cloudformation:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: acm-artifact
      - name: Display structure of downloaded files
        run: |
          mkdir /home/runner/acmhome
          sudo chown runner:runner /home/runner/acmhome
          mv acm_build.tar /home/runner/acmhome
          cd /home/runner/acmhome
          tar -xvf acm_build.tar
          rm acm_build.tar
          PATH=$PATH:/home/runner/acmhome/dist/acm;export PATH
      - uses: actions/checkout@v3
      - id: ConfigureUbuntuAgent
        uses: ./.github/actions/ubuntu-provisioner
      - name: Put secrets in file
        shell: bash
        env:
          ACM_SECRET: ${{ secrets.ACM_REPO }}
          ACM_SECOND: ${{ secrets.ACM_REPO_SECOND }}
        run: | 
          echo "$ACM_SECRET" > /home/runner/acmconfig/keys.yaml
          echo "$ACM_SECOND" > /usr/acm/keys/adminAccounts/keys.yaml
      - name: Setup On
        shell: bash
        env:
          ACM_SECRET: ${{ secrets.ACM_REPO }}
          ACM_SECOND: ${{ secrets.ACM_REPO_SECOND }}
        run: |
          echo "$ACM_SECRET" > /home/runner/acmconfig/keys.yaml
          echo "$ACM_SECOND" > /usr/acm/keys/adminAccounts/keys.yaml
          echo "About to print ACM_SECRET"
          echo "$ACM_SECRET"
          PATH=$PATH:/home/runner/acmhome/dist/acm;export PATH
          sudo mkdir /home/runner/testdir
          sudo chown runner:runner /home/runner/testdir
          cd /home/runner/testdir
          echo 'About to setup on'
          acm setup on sourceRepo=https://github.com/AgileCloudInstitute/acm-config-projects-cf.git
          echo "........................About to ls -al "
          ls -al 
      - shell: bash
        name: Run platform on
        env:
          ACM_SECRET: ${{ secrets.ACM_REPO }}
          ACM_SECOND: ${{ secrets.ACM_REPO_SECOND }}
        run: |
          echo "$ACM_SECRET" > /home/runner/acmconfig/keys.yaml
          echo "$ACM_SECOND" > /usr/acm/keys/adminAccounts/keys.yaml
          echo "About to print ACM_SECRET"
          echo "$ACM_SECRET"
          PATH=$PATH:/home/runner/acmhome/dist/acm;export PATH
          cd /home/runner/testdir
          echo ".................about to run e2e test"
          acm platform on
      - shell: bash
        name: Run platform off
        env:
          ACM_SECRET: ${{ secrets.ACM_REPO }}
          ACM_SECOND: ${{ secrets.ACM_REPO_SECOND }}
        run: |
          echo "$ACM_SECRET" > /home/runner/acmconfig/keys.yaml
          echo "$ACM_SECOND" > /usr/acm/keys/adminAccounts/keys.yaml
          echo "About to print ACM_SECRET"
          echo "$ACM_SECRET"
          PATH=$PATH:/home/runner/acmhome/dist/acm;export PATH
          cd /home/runner/testdir
          echo ".................about to run e2e test"
          acm platform off
      - name: Setup Off
        shell: bash
        env:
          ACM_SECRET: ${{ secrets.ACM_REPO }}
          ACM_SECOND: ${{ secrets.ACM_REPO_SECOND }}
        run: |
          echo "$ACM_SECRET" > /home/runner/acmconfig/keys.yaml
          echo "$ACM_SECOND" > /usr/acm/keys/adminAccounts/keys.yaml
          echo "About to print ACM_SECRET"
          echo "$ACM_SECRET"
          PATH=$PATH:/home/runner/acmhome/dist/acm;export PATH
          cd /home/runner/testdir
          echo '........................About to setup off'
          acm setup off
          echo "........................About to ls -al"
          ls -al
      - shell: bash
        name: Delete Secrets
        run: |
          rm /home/runner/acmconfig/keys.yaml
  e2e-tests-linux-custom:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: acm-artifact
      - name: Display structure of downloaded files
        run: |
          mkdir /home/runner/acmhome
          sudo chown runner:runner /home/runner/acmhome
          mv acm_build.tar /home/runner/acmhome
          cd /home/runner/acmhome
          tar -xvf acm_build.tar
          rm acm_build.tar
          PATH=$PATH:/home/runner/acmhome/dist/acm;export PATH
      - uses: actions/checkout@v3
      - id: ConfigureUbuntuAgent
        uses: ./.github/actions/ubuntu-provisioner
      - name: Put secrets in file
        shell: bash
        env:
          ACM_SECRET: ${{ secrets.ACM_REPO }}
          ACM_SECOND: ${{ secrets.ACM_REPO_SECOND }}
        run: | 
          echo "$ACM_SECRET" > /home/runner/acmconfig/keys.yaml
          echo "$ACM_SECOND" > /usr/acm/keys/adminAccounts/keys.yaml
      - name: Setup On
        shell: bash
        env:
          ACM_SECRET: ${{ secrets.ACM_REPO }}
          ACM_SECOND: ${{ secrets.ACM_REPO_SECOND }}
        run: |
          echo "$ACM_SECRET" > /home/runner/acmconfig/keys.yaml
          echo "$ACM_SECOND" > /usr/acm/keys/adminAccounts/keys.yaml
          echo "About to print ACM_SECRET"
          echo "$ACM_SECRET"
          PATH=$PATH:/home/runner/acmhome/dist/acm;export PATH
          sudo mkdir /home/runner/testdir
          sudo chown runner:runner /home/runner/testdir
          cd /home/runner/testdir
          echo 'About to setup on'
          acm setup on sourceRepo=https://github.com/AgileCloudInstitute/acm-config-custom.git
          echo "........................About to ls -al "
          ls -al 
      - shell: bash
        name: Run platform on
        env:
          ACM_SECRET: ${{ secrets.ACM_REPO }}
          ACM_SECOND: ${{ secrets.ACM_REPO_SECOND }}
        run: |
          echo "$ACM_SECRET" > /home/runner/acmconfig/keys.yaml
          echo "$ACM_SECOND" > /usr/acm/keys/adminAccounts/keys.yaml
          echo "About to print ACM_SECRET"
          echo "$ACM_SECRET"
          PATH=$PATH:/home/runner/acmhome/dist/acm;export PATH
          cd /home/runner/testdir
          echo ".................about to run e2e test"
          acm platform on
      - shell: bash
        name: Run platform off
        env:
          ACM_SECRET: ${{ secrets.ACM_REPO }}
          ACM_SECOND: ${{ secrets.ACM_REPO_SECOND }}
        run: |
          echo "$ACM_SECRET" > /home/runner/acmconfig/keys.yaml
          echo "$ACM_SECOND" > /usr/acm/keys/adminAccounts/keys.yaml
          echo "About to print ACM_SECRET"
          echo "$ACM_SECRET"
          PATH=$PATH:/home/runner/acmhome/dist/acm;export PATH
          cd /home/runner/testdir
          echo ".................about to run e2e test"
          acm platform off
      - name: Setup Off
        env:
          ACM_SECRET: ${{ secrets.ACM_REPO }}
          ACM_SECOND: ${{ secrets.ACM_REPO_SECOND }}
        run: |
          echo "$ACM_SECRET" > /home/runner/acmconfig/keys.yaml
          echo "$ACM_SECOND" > /usr/acm/keys/adminAccounts/keys.yaml
          echo "About to print ACM_SECRET"
          echo "$ACM_SECRET"
          PATH=$PATH:/home/runner/acmhome/dist/acm;export PATH
          cd /home/runner/testdir
          echo '........................About to setup off'
          acm setup off
          echo "........................About to ls -al"
          ls -al
      - shell: bash
        name: Delete Secrets
        run: |
          rm /home/runner/acmconfig/keys.yaml
  e2e-tests-linux-terraform-packer:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: acm-artifact
      - name: Display structure of downloaded files
        run: |
          mkdir /home/runner/acmhome
          sudo chown runner:runner /home/runner/acmhome
          mv acm_build.tar /home/runner/acmhome
          cd /home/runner/acmhome
          tar -xvf acm_build.tar
          rm acm_build.tar
          PATH=$PATH:/home/runner/acmhome/dist/acm;export PATH
      - uses: actions/checkout@v3
      - id: ConfigureUbuntuAgent
        uses: ./.github/actions/ubuntu-provisioner
      - name: Put secrets in file
        shell: bash
        env:
          ACM_SECRET: ${{ secrets.ACM_REPO }}
          ACM_SECOND: ${{ secrets.ACM_REPO_SECOND }}
        run: | 
          echo "$ACM_SECRET" > /home/runner/acmconfig/keys.yaml
          echo "$ACM_SECOND" > /usr/acm/keys/adminAccounts/keys.yaml
      - name: Setup On
        shell: bash
        env:
          ACM_SECRET: ${{ secrets.ACM_REPO }}
          ACM_SECOND: ${{ secrets.ACM_REPO_SECOND }}
        run: |
          echo "$ACM_SECRET" > /home/runner/acmconfig/keys.yaml
          echo "$ACM_SECOND" > /usr/acm/keys/adminAccounts/keys.yaml
          echo "About to print ACM_SECRET"
          echo "$ACM_SECRET"
          PATH=$PATH:/home/runner/acmhome/dist/acm;export PATH
          sudo mkdir /home/runner/testdir
          sudo chown runner:runner /home/runner/testdir
          cd /home/runner/testdir
          echo 'About to setup on'
          acm setup on sourceRepo=https://github.com/AgileCloudInstitute/acm-config-terraform-packer.git
          echo "........................About to ls -al "
          ls -al 
      - shell: bash
        name: Run tfbackend serviceType on
        env:
          ACM_SECRET: ${{ secrets.ACM_REPO }}
          ACM_SECOND: ${{ secrets.ACM_REPO_SECOND }}
        run: |
          echo "$ACM_SECRET" > /home/runner/acmconfig/keys.yaml
          echo "$ACM_SECOND" > /usr/acm/keys/adminAccounts/keys.yaml
          echo "About to print ACM_SECRET"
          echo "$ACM_SECRET"
          PATH=$PATH:/home/runner/acmhome/dist/acm;export PATH
          cd /home/runner/testdir
          acm serviceType on systemName=tfbackend serviceType=tfBackend
      - shell: bash
        name: Run tfbackend serviceType off
        env:
          ACM_SECRET: ${{ secrets.ACM_REPO }}
          ACM_SECOND: ${{ secrets.ACM_REPO_SECOND }}
        run: |
          echo "$ACM_SECRET" > /home/runner/acmconfig/keys.yaml
          echo "$ACM_SECOND" > /usr/acm/keys/adminAccounts/keys.yaml
          echo "About to print ACM_SECRET"
          echo "$ACM_SECRET"
          PATH=$PATH:/home/runner/acmhome/dist/acm;export PATH
          cd /home/runner/testdir
          acm serviceType off systemName=tfbackend serviceType=tfBackend
      - shell: bash
        name: Run tfbackend serviceInstance on
        env:
          ACM_SECRET: ${{ secrets.ACM_REPO }}
          ACM_SECOND: ${{ secrets.ACM_REPO_SECOND }}
        run: |
          echo "$ACM_SECRET" > /home/runner/acmconfig/keys.yaml
          echo "$ACM_SECOND" > /usr/acm/keys/adminAccounts/keys.yaml
          echo "About to print ACM_SECRET"
          echo "$ACM_SECRET"
          PATH=$PATH:/home/runner/acmhome/dist/acm;export PATH
          cd /home/runner/testdir
          acm serviceInstance on systemName=tfbackend serviceType=tfBackend serviceInstance=adminAccounts
      - shell: bash
        name: Run tfbackend serviceInstance off
        env:
          ACM_SECRET: ${{ secrets.ACM_REPO }}
          ACM_SECOND: ${{ secrets.ACM_REPO_SECOND }}
        run: |
          echo "$ACM_SECRET" > /home/runner/acmconfig/keys.yaml
          echo "$ACM_SECOND" > /usr/acm/keys/adminAccounts/keys.yaml
          echo "About to print ACM_SECRET"
          echo "$ACM_SECRET"
          PATH=$PATH:/home/runner/acmhome/dist/acm;export PATH
          cd /home/runner/testdir
          acm serviceInstance off systemName=tfbackend serviceType=tfBackend serviceInstance=adminAccounts
      - shell: bash
        name: Run tfbackend services on
        env:
          ACM_SECRET: ${{ secrets.ACM_REPO }}
          ACM_SECOND: ${{ secrets.ACM_REPO_SECOND }}
        run: |
          echo "$ACM_SECRET" > /home/runner/acmconfig/keys.yaml
          echo "$ACM_SECOND" > /usr/acm/keys/adminAccounts/keys.yaml
          echo "About to print ACM_SECRET"
          echo "$ACM_SECRET"
          PATH=$PATH:/home/runner/acmhome/dist/acm;export PATH
          cd /home/runner/testdir
          acm services on systemName=tfbackend
      - shell: bash
        name: Run admin foundation on
        env:
          ACM_SECRET: ${{ secrets.ACM_REPO }}
          ACM_SECOND: ${{ secrets.ACM_REPO_SECOND }}
        run: |
          echo "$ACM_SECRET" > /home/runner/acmconfig/keys.yaml
          echo "$ACM_SECOND" > /usr/acm/keys/adminAccounts/keys.yaml
          echo "About to print ACM_SECRET"
          echo "$ACM_SECRET"
          PATH=$PATH:/home/runner/acmhome/dist/acm;export PATH
          cd /home/runner/testdir
          acm foundation on systemName=admin
      - shell: bash
        name: Run admin services on
        env:
          ACM_SECRET: ${{ secrets.ACM_REPO }}
          ACM_SECOND: ${{ secrets.ACM_REPO_SECOND }}
        run: |
          echo "$ACM_SECRET" > /home/runner/acmconfig/keys.yaml
          echo "$ACM_SECOND" > /usr/acm/keys/adminAccounts/keys.yaml
          echo "About to print ACM_SECRET"
          echo "$ACM_SECRET"
          PATH=$PATH:/home/runner/acmhome/dist/acm;export PATH
          cd /home/runner/testdir
          acm services on systemName=admin
      - shell: bash
        name: Run agents foundation on
        env:
          ACM_SECRET: ${{ secrets.ACM_REPO }}
          ACM_SECOND: ${{ secrets.ACM_REPO_SECOND }}
        run: |
          echo "$ACM_SECRET" > /home/runner/acmconfig/keys.yaml
          echo "$ACM_SECOND" > /usr/acm/keys/adminAccounts/keys.yaml
          echo "About to print ACM_SECRET"
          echo "$ACM_SECRET"
          PATH=$PATH:/home/runner/acmhome/dist/acm;export PATH
          cd /home/runner/testdir
          acm foundation on systemName=agents
      - shell: bash
        name: Run agents services on
        env:
          ACM_SECRET: ${{ secrets.ACM_REPO }}
          ACM_SECOND: ${{ secrets.ACM_REPO_SECOND }}
        run: |
          echo "$ACM_SECRET" > /home/runner/acmconfig/keys.yaml
          echo "$ACM_SECOND" > /usr/acm/keys/adminAccounts/keys.yaml
          echo "About to print ACM_SECRET"
          echo "$ACM_SECRET"
          PATH=$PATH:/home/runner/acmhome/dist/acm;export PATH
          cd /home/runner/testdir
          acm services on systemName=agents
      - shell: bash
        name: Run agents services off
        env:
          ACM_SECRET: ${{ secrets.ACM_REPO }}
          ACM_SECOND: ${{ secrets.ACM_REPO_SECOND }}
        run: |
          echo "$ACM_SECRET" > /home/runner/acmconfig/keys.yaml
          echo "$ACM_SECOND" > /usr/acm/keys/adminAccounts/keys.yaml
          echo "About to print ACM_SECRET"
          echo "$ACM_SECRET"
          PATH=$PATH:/home/runner/acmhome/dist/acm;export PATH
          cd /home/runner/testdir
          acm services off systemName=agents
      - shell: bash
        name: Run agents foundation off
        env:
          ACM_SECRET: ${{ secrets.ACM_REPO }}
          ACM_SECOND: ${{ secrets.ACM_REPO_SECOND }}
        run: |
          echo "$ACM_SECRET" > /home/runner/acmconfig/keys.yaml
          echo "$ACM_SECOND" > /usr/acm/keys/adminAccounts/keys.yaml
          echo "About to print ACM_SECRET"
          echo "$ACM_SECRET"
          PATH=$PATH:/home/runner/acmhome/dist/acm;export PATH
          cd /home/runner/testdir
          acm foundation off systemName=agents
      - shell: bash
        name: Run admin services off
        env:
          ACM_SECRET: ${{ secrets.ACM_REPO }}
          ACM_SECOND: ${{ secrets.ACM_REPO_SECOND }}
        run: |
          echo "$ACM_SECRET" > /home/runner/acmconfig/keys.yaml
          echo "$ACM_SECOND" > /usr/acm/keys/adminAccounts/keys.yaml
          echo "About to print ACM_SECRET"
          echo "$ACM_SECRET"
          PATH=$PATH:/home/runner/acmhome/dist/acm;export PATH
          cd /home/runner/testdir
          acm services off systemName=admin
      - shell: bash
        name: Run admin foundation off
        env:
          ACM_SECRET: ${{ secrets.ACM_REPO }}
          ACM_SECOND: ${{ secrets.ACM_REPO_SECOND }}
        run: |
          echo "$ACM_SECRET" > /home/runner/acmconfig/keys.yaml
          echo "$ACM_SECOND" > /usr/acm/keys/adminAccounts/keys.yaml
          echo "About to print ACM_SECRET"
          echo "$ACM_SECRET"
          PATH=$PATH:/home/runner/acmhome/dist/acm;export PATH
          cd /home/runner/testdir
          acm foundation off systemName=admin
      - shell: bash
        name: Run tfbackend services off
        env:
          ACM_SECRET: ${{ secrets.ACM_REPO }}
          ACM_SECOND: ${{ secrets.ACM_REPO_SECOND }}
        run: |
          echo "$ACM_SECRET" > /home/runner/acmconfig/keys.yaml
          echo "$ACM_SECOND" > /usr/acm/keys/adminAccounts/keys.yaml
          echo "About to print ACM_SECRET"
          echo "$ACM_SECRET"
          PATH=$PATH:/home/runner/acmhome/dist/acm;export PATH
          cd /home/runner/testdir
          acm services off systemName=tfbackend
      - name: Setup Off
        env:
          ACM_SECRET: ${{ secrets.ACM_REPO }}
          ACM_SECOND: ${{ secrets.ACM_REPO_SECOND }}
        run: |
          echo "$ACM_SECRET" > /home/runner/acmconfig/keys.yaml
          echo "$ACM_SECOND" > /usr/acm/keys/adminAccounts/keys.yaml
          echo "About to print ACM_SECRET"
          echo "$ACM_SECRET"
          PATH=$PATH:/home/runner/acmhome/dist/acm;export PATH
          cd /home/runner/testdir
          echo '........................About to setup off'
          acm setup off
          echo "........................About to ls -al"
          ls -al
      - shell: bash
        name: Delete Secrets
        run: |
          rm /home/runner/acmconfig/keys.yaml
