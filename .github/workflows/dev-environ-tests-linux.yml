name: dev-environ-tests-linux
on:
  push:
    branches:
      - dev
jobs:
  unit-tests-linux-misc:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - id: ConfigureUbuntuAgent
        uses: ./.github/actions/ubuntu-provisioner
      - name: Put secrets in file
        shell: bash
        env:
          ACM_SECRET: ${{ secrets.ACM_REPO }}
          ACM_SECOND: ${{ secrets.ACM_REPO_SECOND }}
        run: | 
          echo "$ACM_SECRET" > /home/runner/acmconfig/keys.yaml
          echo "$ACM_SECOND" > /usr/acm/keys/adminAccounts/keys.yaml
      - shell: bash
        name: Run setup on
        run: |
          cd /home/runner/work/AgileCloudManager/
          python AgileCloudManager/app/acm.py setup on sourceRepo=https://github.com/AgileCloudInstitute/acm-config-projects-cf.git
      - shell: bash
        name: Run test_command_builder
        run: |
          cd /home/runner/work/AgileCloudManager/
          python -m unittest AgileCloudManager.unitTests.test_command_builder
      - shell: bash
        name: Run test_workflow_and_changes
        run: |
          cd /home/runner/work/AgileCloudManager/
          python -m unittest AgileCloudManager.unitTests.test_workflow_and_changes
      - shell: bash
        name: Run test_controller_custom.py
        run: |
          cd /home/runner/work/AgileCloudManager/
          python -m unittest AgileCloudManager.unitTests.test_controller_custom
      - shell: bash
        name: Delete Secrets
        run: |
          rm /home/runner/acmconfig/keys.yaml
  unit-tests-linux-cloudformation:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - id: ConfigureUbuntuAgent
        uses: ./.github/actions/ubuntu-provisioner
      - name: Put secrets in file
        shell: bash
        env:
          ACM_SECRET: ${{ secrets.ACM_REPO }}
          ACM_SECOND: ${{ secrets.ACM_REPO_SECOND }}
        run: | 
          echo "$ACM_SECRET" > /home/runner/acmconfig/keys.yaml
          echo "$ACM_SECOND" > /usr/acm/keys/adminAccounts/keys.yaml
      - shell: bash
        name: Run setup on
        run: |
          cd /home/runner/work/AgileCloudManager/
          python AgileCloudManager/app/acm.py setup on sourceRepo=https://github.com/AgileCloudInstitute/acm-config-projects-cf.git
      - shell: bash
        name: Run test_controller_cf
        run: |
          cd /home/runner/work/AgileCloudManager/
          python -m unittest AgileCloudManager.unitTests.test_controller_cf
      - shell: bash
        name: Delete Secrets
        run: |
          rm /home/runner/acmconfig/keys.yaml
  unit-tests-linux-terraform-packer:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - id: ConfigureUbuntuAgent
        uses: ./.github/actions/ubuntu-provisioner
      - name: Put secrets in file
        shell: bash
        env:
         ACM_SECRET: ${{ secrets.ACM_REPO }}
         ACM_SECOND: ${{ secrets.ACM_REPO_SECOND }}
        run: | 
          echo "$ACM_SECRET" > /home/runner/acmconfig/keys.yaml
          echo "$ACM_SECOND" > /usr/acm/keys/adminAccounts/keys.yaml
      - shell: bash
        name: Run setup on
        run: |
          cd /home/runner/work/AgileCloudManager/
          python AgileCloudManager/app/acm.py setup on sourceRepo=https://github.com/AgileCloudInstitute/acm-config-projects-cf.git
      - shell: bash
        name: Run test_controller_terraform_and_packer_one
        run: |
          cd /home/runner/work/AgileCloudManager/
          python -m unittest AgileCloudManager.unitTests.test_controller_terraform_and_packer_one
      - shell: bash
        name: Run test_controller_terraform_and_packer_two
        run: |
          cd /home/runner/work/AgileCloudManager/
          python -m unittest AgileCloudManager.unitTests.test_controller_terraform_and_packer_two
      - shell: bash
        name: Delete Secrets
        run: |
          rm /home/runner/acmconfig/keys.yaml
  unit-tests-linux-arm-template:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - id: ConfigureUbuntuAgent
        uses: ./.github/actions/ubuntu-provisioner
      - name: Put secrets in file
        shell: bash
        env:
          ACM_SECRET: ${{ secrets.ACM_REPO }}
          ACM_SECOND: ${{ secrets.ACM_REPO_SECOND }}
        run: | 
          echo "$ACM_SECRET" > /home/runner/acmconfig/keys.yaml
          echo "$ACM_SECOND" > /usr/acm/keys/adminAccounts/keys.yaml
      - shell: bash
        name: Run setup on
        run: |
          cd /home/runner/work/AgileCloudManager/
          python AgileCloudManager/app/acm.py setup on sourceRepo=https://github.com/AgileCloudInstitute/acm-config-projects-cf.git
      - shell: bash
        name: Run test_controller_arm
        run: |
          cd /home/runner/work/AgileCloudManager/
          python -m unittest AgileCloudManager.unitTests.test_controller_arm
      - shell: bash
        name: Delete Secrets
        run: |
          rm /home/runner/acmconfig/keys.yaml
  push-to-test-branch:
    needs: [unit-tests-linux-misc, unit-tests-linux-cloudformation, unit-tests-linux-terraform-packer, unit-tests-linux-arm-template]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.HUSH }}
      - shell: bash
        name: Push changes to test branch
        run: |
          git config --global user.email "Agile.Cloud.Institute@GreenRiverIT.com"
          git config --global user.name "AgileCloudInstitute"
          git init
          git remote set-url origin "https://github.com/${GITHUB_REPOSITORY}.git"
          git branch -M test
          git add --all
          git push --force -u origin test

#  push-to-test-branch:
#    needs: [unit-tests-linux-misc, unit-tests-linux-cloudformation, unit-tests-linux-terraform-packer, unit-tests-linux-arm-template]
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v3
#      - shell: bash
#        name: Push changes to test branch
#        env:
#          GIT_PAT: ${{ secrets.HUSH }}
#        run: |
#          repoWithToken="https://"$GIT_PAT"@github.com/AgileCloudInstitute/AgileCloudManager.git"
#          git config --global user.email "Agile.Cloud.Institute@GreenRiverIT.com"
#          git config --global user.name "AgileCloudInstitute"
#          git init
#          git remote set-url origin $repoWithToken
#          git branch -M test
#          git add --all
#          git push --force -u origin test
