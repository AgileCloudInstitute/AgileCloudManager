name: org-secret-into-file
on: [push]
jobs:
  put-secret-into-file:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - shell: bash
        name: Configure agent
        env:
          ACM_SECRET: ${{ secrets.ACM_REPO }}
        run: |
          echo "Current working directory is: "
          pwd
          mkdir /home/runner/keys
          mkdir /home/runner/keys/starter
          mkdir /home/runner/acmconfig/
          echo "$ACM_SECRET" > /home/runner/acmconfig/keys.yaml
          sudo mkdir /var/log/acm
          sudo chown -R runner:runner /var/log/acm
          sudo mkdir /opt/acm
          sudo chown -R runner:runner /opt/acm
          sudo mkdir /usr/acm
          sudo mkdir /usr/acm/keys
          sudo chown -R runner:runner /usr/acm
          echo 'new------------------'
          git --version
          sudo apt install -y dos2unix
          ## Install Terraform
          cd /home/runner
          mkdir terraform-download
          cd terraform-download
          wget https://releases.hashicorp.com/terraform/0.12.24/terraform_0.12.24_linux_amd64.zip
          unzip terraform_0.12.24_linux_amd64.zip
          #Move the terraform binary into a folder that is listed as part of the PATH variable.  
          mv terraform /usr/local/bin/
          echo 'and---------------------------------'
          cd /home/runner
          sudo apt -y install ansible
          aws --version
          pip3 install requests
          pip3 install pyyaml
          pip3 install IPy
          python3 --version
          python --version
          #Cause the ansible configuration to be owned by the agent user so that pipelines can change things like hosts file, etc.  
          sudo chown -R runner:runner /opt/pipx_bin/ansible
          echo 'then--------------------------------'
          sudo apt update && sudo apt upgrade
          sudo apt clean
      - shell: bash
        name: Run setup on
        run: |
          echo "Current working directory is: "
          pwd
          echo 'Contents are: --------------------------------------------------'
          ls -al
          echo '+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++'
          cd /home/runner/work/AgileCloudManager/
          echo "Current working directory is: "
          pwd
          echo 'Contents are: --------------------------------------------------'
          ls -al
          python AgileCloudManager/app/acm.py setup on sourceRepo=https://github.com/AgileCloudInstitute/acm-config-projects-cf.git
      - shell: bash
        name: Run test_workflow_and_changes.py
        env:
          ACM_SECRET: ${{ secrets.ACM_REPO }}
        run: |
          echo "................about to pwd"
          pwd
          echo "................about to list contents"
          ls -al
          echo "................about to cd /home/runner/work/AgileCloudManager/ "
          cd /home/runner/work/AgileCloudManager/
          echo "Current working directory is: "
          pwd
          echo 'Contents are: --------------------------------------------------'
          ls -al
          echo ".................about to run unit test"
          python -m unittest AgileCloudManager.unitTests.test_workflow_and_changes
      - shell: bash
        name: Delete Secrets
        run: |
          rm /home/runner/acmconfig/keys.yaml

#Next step is to put the secrets into the locations where acm can see them.
#Then make sure the directories are created for the setup command to use to install things.
#Also make sure that secrets have been destroyed
#          echo "$ACM_SECRET" > /home/runner/keys/starter/keys.yaml
#          echo 'cat-----------------------------------'
#          cat -n /home/runner/keys/starter/keys.yaml
#          rm /home/runner/keys/starter/keys.yaml
